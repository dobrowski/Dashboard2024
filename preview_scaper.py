# -*- coding: utf-8 -*-
"""Preview Scaper.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12xfI6Adg_kjyFVWxFmuVbeEN7gDicVEU
"""



"""# Imports"""

import json

import pandas as pd
import requests

"""# Pull in the CDS codes to loop through

Download this file as an example: [cds.txt](https://drive.google.com/drive/folders/1-EI1S5VxLh1Dl62YV71LEUmOLHKBPcch)

Note: This initial list of CDS codes is schools and districts within the SoCal Geo Area. The file is only a list of CDS codes, no header.
"""

with open("cdsmry.txt", "rt") as f:
    cds_codes = f.read().splitlines()

s = requests.Session()

all_results = []
progress = 0
total = len(cds_codes)

for i in cds_codes:
    progress += 1
    results = s.get(
        f"https://caschooldashboard-staging-api-west.azurewebsites.net/Reports/{i}/10/StudentGroups/1-2-3-4-5-6-7-8"
    )
    data_dict = json.loads(results.text)
    for j in data_dict:
        indicatorResults = j["primary"]["list"]
        all_results.extend(indicatorResults)
    print(f"{i} complete: {progress}/{total}")

results_df = pd.DataFrame.from_dict(all_results)
results_df.to_csv("all_results.csv")

"""# R Code to Transform to Dashboard Format

If you'd like to get a file that conforms more to the standard Dashboard file headers, use the code below. You will need to use the Runtime menu to switch to the R runtime.

Download indicator_priorities.csv and upload [from here](https://https://drive.google.com/drive/folders/1-EI1S5VxLh1Dl62YV71LEUmOLHKBPcch).
"""

library(tidyverse)
stu_groups <- c("ALL", "SED", "EL", "LTEL7", "FOS", "HOM", "SWD", "AA", "AI", "AS", "FI", "HI", "MR", "PI", "WH")

scrape_data <- read_csv('all_results.csv',
                          col_types = cols(
                            cdsCode = col_character(),
                            indicatorId = col_character(),
                            statusId = col_character(),
                            changeId = col_character(),
                            performance = col_character(),
                            schoolYearId = col_character(),
                          )) %>%
    select(-1)
  priorities <- read_csv('indicator_priorities.csv')
  indicators <- tibble(
    indicatorId = c("1","2","3","4","5","6","7"),
    Indicator = c("Chronic Absenteeism", "Suspension Rate", "ELPI", "Graduation Rate Combined (4-5)", "CCI", "CAASPP ELA", "CAASPP MATH")
  )

scrape_prepared <- scrape_data %>%
    left_join(indicators) %>%
    select(
      cds = cdsCode,
      studentgroup = studentGroup,
      chronicCount,
      currdenom = count,
      currstatus = status,
      change = change,
      Indicator
    ) %>%
    mutate(
      studentgroup = factor(studentgroup, levels = stu_groups),
      studentgroup = if_else(
        studentgroup == "ALL" & Indicator == "ELPI",
        "EL",
        studentgroup
      ),
      safetynet = if_else(
        Indicator %in% c("Chronic Absenteeism", "Graduation Rate Combined (4-5)", "Suspension Rate", "CCI") & currdenom <= 149,
        "Y",
        ""
      ), # Chronic, CCI
      currnumer = case_when(
        Indicator == "Chronic Absenteeism" ~ chronicCount,
        Indicator %in% c("Suspension Rate", "ELPI", "Graduation Rate Combined (4-5)", "CCI") ~ round(currstatus * currdenom / 100, 0),
      ),
    ) %>%
    filter(!is.na(studentgroup)) %>%
    select(-chronicCount)

write_excel_csv(
        scrape_prepared, 'scrape_prepared.csv'
    )

